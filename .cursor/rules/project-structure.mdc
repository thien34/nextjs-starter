---
description: Project structure and file organization guidelines
globs:
alwaysApply: false
---

# Project Structure

## Main Structure

- Main app is in `src`

```tree
.
├── app/         # Next.js App Router
│   ├── (app)/   # Main application pages
│   │   ├── reply-zero/     # Reply Zero feature
│   │   ├── settings/       # User settings
│   │   ├── setup/          # Main onboarding
│   │   ├── clean/          # Bulk email cleanup
│   │   ├── smart-categories/ # Smart sender categorization
│   │   ├── stats/          # Email analytics
│   │   └── ... (other app routes)
│   ├── api/    # API Routes
│   │   ├── knowledge/      # Knowledge base API
│   │   ├── clean/          # Cleanup API
│   │   ├── user/          # User management
│   │   ├── auth/          # Authentication
│   │   └── ... (other APIs)
│   ├── (landing)/  # Marketing/landing pages
│   ├── blog/       # Blog pages
│   ├── layout.tsx  # Root layout
│   ├── styles/      # Global CSS styles
│   ├── types/       # TypeScript type definitions
│   ├── prisma/      # Prisma schema and client
│   ├── providers/   # React Context providers
│   ├── hooks/       # Custom React hooks
│   ├── scripts/     # Utility scripts
│   ├── store/       # State management
│   └── ... (other app files)
├── utils/       # Utility functions and helpers
│   ├── actions/    # Server actions
│   ├── parse/      # Parsing utilities
│   ├── queue/      # Queue management
│   ├── error-messages/  # Error handling
│   └── *.ts        # Other utility files (auth, email, etc.)
├── public/      # Static assets (images, icons, etc.)
├── next.config.ts
├── package.json
└── ... (config files)

```

## File Naming and Organization

- Use kebab case for route directories (e.g., `api/hello-world/route`)
- Use PascalCase for components (e.g. `components/Button.tsx`)
- Shadcn components are in `components/ui`
- All other components are in `components/`
- Colocate files in the folder where they're used unless they can be used across the app
- If a component can be used in many places, place it in the `components` folder

## Utility Functions

- Create utility functions in `utils/` folder for reusable logic
- Use lodash utilities for common operations (arrays, objects, strings)
- Import specific lodash functions to minimize bundle size:

  ```ts
  import groupBy from "lodash/groupBy";
  ```
